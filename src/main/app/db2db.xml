<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd">
	<data-mapper:config name="list_map__to_list_map_"
		transformationGraphPath="list_map__to_list_map_.grf" doc:name="list_map__to_list_map_" />
	<batch:job name="db2db" max-failed-records="-1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:input>
			<http:inbound-endpoint exchange-pattern="one-way"
				host="localhost" port="${http.port}" path="triggerbatch" doc:name="/triggerbatch" />
			<tracking:custom-event event-name="batch.db2db.start"
				doc:name="batch.db2db.start">
				<tracking:meta-data key="time" value="#[new Date()]" />
			</tracking:custom-event>

			<jdbc-ee:outbound-endpoint
				exchange-pattern="request-response" queryTimeout="-1" connector-ref="Database"
				doc:name="Database" queryKey="selectFromDB1">
				<jdbc-ee:query key="selectFromDB1" value="select * from database1;" />
			</jdbc-ee:outbound-endpoint>
			<data-mapper:transform config-ref="list_map__to_list_map_"
				doc:name="List&lt;Map&gt; To List&lt;Map&gt;" stream="true" />
		</batch:input>
		<batch:process-records>
			<batch:step name="database2.insert">
				<batch:set-record-variable variableName="recordId"
					value="#[payload.id]" doc:name="Store Record Id" />

				<batch:commit size="100" doc:name="Batch Commit">
					<transactional action="BEGIN_OR_JOIN" doc:name="Transactional">
						<jdbc-ee:outbound-endpoint
							exchange-pattern="request-response" queryTimeout="-1"
							connector-ref="Database" doc:name="Database" queryKey="insertToDB2">
							<jdbc-ee:query key="insertToDB2"
								value="insert into database2 values(#[payload.id], #[payload.status]);" />
						</jdbc-ee:outbound-endpoint>

					</transactional>
				</batch:commit>


			</batch:step>
			<batch:step name="database2.update.sucess">

				<batch:commit size="100" doc:name="Batch Commit">
					<jdbc-ee:outbound-endpoint
						exchange-pattern="request-response" queryTimeout="-1"
						connector-ref="Database" doc:name="Database" queryKey="updateStatusInDB2">
						<jdbc-ee:query key="updateStatusInDB2"
							value="update database2 set status='C' where id=#[recordVars['recordId']];" />
					</jdbc-ee:outbound-endpoint>
				</batch:commit>
			</batch:step>
			<batch:step name="database2.update.failure" accept-policy="ONLY_FAILURES">
				<jdbc-ee:outbound-endpoint
					exchange-pattern="request-response" queryTimeout="-1"
					connector-ref="Database" doc:name="Database" queryKey="updateStatusInDB2Error">
					<jdbc-ee:query key="updateStatusInDB2Error"
						value="update database2 set status='E' where id=#[recordVars['recordId']];" />
				</jdbc-ee:outbound-endpoint>

			</batch:step>
		</batch:process-records>

		<batch:on-complete>
			<logger
				message="#[payload.loadedRecords] Loaded Records #[payload.failedRecords], Failed Records"
				level="INFO" doc:name="Log Results" />
			<tracking:custom-event event-name="batch.db2db.start"
				doc:name="batch.db2db.start">
				<tracking:meta-data key="time" value="#[new Date()]" />
			</tracking:custom-event>
			<!-- <flow-ref name="notification.fanout" doc:name="notification.fanout"/> -->
		</batch:on-complete>
	</batch:job>
</mule>
